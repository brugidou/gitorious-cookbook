#!/bin/bash
### BEGIN INIT INFO
# Provides:          git-poller 
# Required-Start:    mysql
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: GIT-Poller server daemon
# Description:       Starts the GIT-Poller needed by Gitorious
### END INIT INFO

# Author: Antonio Marques <acmarques@gmail.com>

GITORIOUS_HOME="<%= @gitorious_home %>"
RETVAL=0
PROG="git-poller"
GIT_POLLER="<%= @gem_path %>/bundle exec $GITORIOUS_HOME/script/poller"
LOCK_FILE=/var/lock/git-poller
PID_FILE=$GITORIOUS_HOME/tmp/pids/poller0.pid
export RAILS_ENV=production

# Source lsb functions for killproc
. /lib/lsb/init-functions

do_check_pid() {
  if [ -f $PID_FILE ]; then
    PID=`cat $PID_FILE`
    RUNNING=`ps --pid $PID | wc -l`
  else
    PID=0
    RUNNING=0
  fi
}

runlevel=$(set -- $(runlevel); eval "echo $$#" )
 
start()
{
  do_check_pid
  if [ $RUNNING != 2 ] ; then
    echo -n "Starting $PROG"
    /bin/su - <%= @node[:gitorious][:user] %> -c "RAILS_ENV=$RAILS_ENV $GIT_POLLER start" 2>/dev/null
    sleep 4 
    if [ -f $PID_FILE ] ; then
      echo "."
      RETVAL=0
    else
      echo ": FAILURE!!!" 
      RETVAL=1
    fi
  else
    echo "$PROG already running"
    RETVAL=1
  fi
  [ "$RETVAL" = 0 ] && touch $LOCK_FILE
}
 
stop()
{
  do_check_pid
  if [ $RUNNING != 2 ] ; then
    echo "$PROG was not properly running"
    RETVAL=1
  else
    echo -n "Stopping $PROG"
    #killproc -p $PID_FILE
    /bin/su - <%= @node[:gitorious][:user] %> -c "RAILS_ENV=$RAILS_ENV $GIT_POLLER stop" 1>/dev/null 2>/dev/null
    RETVAL=$?
    sleep 1
    # if we are in halt or reboot runlevel kill all running sessions
    # so the TCP connections are closed cleanly
    if [ "x$runlevel" = x0 -o "x$runlevel" = x6 ] ; then
      killproc -p $PID 2>/dev/null
    fi
    if [ "$RETVAL" = 0 ] ; then
      rm -f $LOCK_FILE
      echo "."
    else
      echo ": FAILURE!!!"
    fi
  fi
}
 
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
restart)
stop
start
;;
  condrestart)
    if [ -f $LOCK_FILE ] ; then
      if [ "$RETVAL" = 0 ] ; then
        stop
        # avoid race
        sleep 5
        start
      fi
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|condrestart}"
    RETVAL=1
esac
exit $RETVAL

